[{"C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\index.js":"1","C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\App.js":"2","C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\Expenses\\ExpenseList.js":"3","C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\Expenses\\ExpenseItem.js":"4","C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\Expenses\\ExpenseDate.js":"5","C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\UI\\Card.js":"6","C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\Modal\\Modal.js":"7","C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\NewExpense\\NewExpense.js":"8","C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\NewExpense\\ExpenseForm.js":"9"},{"size":142,"mtime":1619499344781,"results":"10","hashOfConfig":"11"},{"size":716,"mtime":1619737011037,"results":"12","hashOfConfig":"11"},{"size":1085,"mtime":1619635598261,"results":"13","hashOfConfig":"11"},{"size":667,"mtime":1619630687345,"results":"14","hashOfConfig":"11"},{"size":547,"mtime":1619551592901,"results":"15","hashOfConfig":"11"},{"size":180,"mtime":1619551558010,"results":"16","hashOfConfig":"11"},{"size":583,"mtime":1619635475363,"results":"17","hashOfConfig":"11"},{"size":438,"mtime":1620240698342,"results":"18","hashOfConfig":"11"},{"size":3637,"mtime":1620239242221,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ozsfzu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\index.js",[],["41","42"],"C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\App.js",[],"C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\Expenses\\ExpenseList.js",[],"C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\Expenses\\ExpenseItem.js",[],"C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\Expenses\\ExpenseDate.js",[],"C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\UI\\Card.js",[],"C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\NewExpense\\NewExpense.js",["43","44"],"import React from 'react';\r\nimport './NewExpense.css'\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = () => {\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","C:\\Users\\claud\\Projects\\React\\01-starting-setup\\src\\components\\NewExpense\\ExpenseForm.js",["45"],"import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = () => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    /* const [userInput, setUserInput] = useState({   ---- We can manage multiple states in just one by using objects like this\r\n        enteredTitle: '',\r\n        enteredAmount:'',\r\n        enteredDate:'',\r\n    }); */\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        /* setUserInput({                       ------this aproach is not convenient to manage multiple states due to\r\n            ...userInput,                       ------we are not ensuring that we are using the latest values for each state \r\n            enteredTitle: event.target.value,\r\n        }); */\r\n        /* setUserInput((prevState) => {                               ---- whit this aproach (arrow function) React is ensuring that is going to use the exact latest state for each value,\r\n            return { ...prevState, enteredTitle: event.target.value }; ---- so, is better practice to manage it like this \r\n        });    */     \r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        /* setUserInput({\r\n            ...userInput,\r\n            enteredAmount: event.target.value,\r\n        }); */\r\n        /* setUserInput((prevState) => {\r\n            return { ...prevState, enteredAmount: event.target.value };\r\n        }); */\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        /* setUserInput({\r\n            ...userInput,\r\n            enteredDate: event.target.value\r\n        }); */\r\n        /* setUserInput((prevState) => {\r\n            return { ...prevState, enteredDate: event.target.value };\r\n        }); */\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={enteredTitle} \r\n                        onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input \r\n                        type=\"number\" \r\n                        min=\"0.01\" \r\n                        step=\"0.01\" \r\n                        value={enteredAmount}\r\n                        onChange={amountChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input \r\n                        type=\"date\" \r\n                        min=\"2019-01-01\" \r\n                        max=\"2022-12-31\"\r\n                        value={enteredDate} \r\n                        onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":7,"column":9,"nodeType":"52","messageId":"53","endLine":7,"endColumn":31},{"ruleId":"50","severity":1,"message":"54","line":8,"column":11,"nodeType":"52","messageId":"53","endLine":8,"endColumn":22},{"ruleId":"50","severity":1,"message":"54","line":51,"column":15,"nodeType":"52","messageId":"53","endLine":51,"endColumn":26},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'saveExpenseDataHandler' is assigned a value but never used.","Identifier","unusedVar","'expenseData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]